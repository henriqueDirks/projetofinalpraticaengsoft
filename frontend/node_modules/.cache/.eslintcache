[{"C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\index.js":"1","C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\App.js":"2","C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\HomeView.js":"3","C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\Table.js":"4","C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\FormModal.js":"5","C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\ReactivationModal.js":"6"},{"size":207,"mtime":1731986173250,"results":"7","hashOfConfig":"8"},{"size":279,"mtime":1731986187419,"results":"9","hashOfConfig":"8"},{"size":2285,"mtime":1732033615082,"results":"10","hashOfConfig":"8"},{"size":3836,"mtime":1732036006069,"results":"11","hashOfConfig":"8"},{"size":1202,"mtime":1731986222114,"results":"12","hashOfConfig":"8"},{"size":1444,"mtime":1731986232211,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hpv8mn",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\index.js",[],["28","29"],"C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\App.js",[],"C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\HomeView.js",[],"C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\Table.js",["30"],"import React, { useEffect, useState } from 'react';\r\nimport { FaEdit, FaTrashAlt, FaUsers } from 'react-icons/fa'; \r\n\r\nconst Table = ({ table, searchTerm, onEdit, onDelete, onViewRelated }) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (table) {\r\n      fetchData();\r\n    }\r\n  }, [table, searchTerm]);\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n\r\n    const queryParam = searchTerm ? `?name=${searchTerm}` : '';\r\n    const url = `http://localhost:5000/api/${table}${queryParam}`;\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Erro ao buscar dados: ${response.statusText}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Dados recebidos:', data); // Debug para verificar os dados recebidos\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Erro ao buscar dados:', err);\r\n        setError(err.message);\r\n        setData([]);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  if (!table) {\r\n    return <p>Selecione uma tabela para visualizar os dados.</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <p>Carregando dados...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p style={{ color: 'red' }}>{error}</p>;\r\n  }\r\n\r\n  const isTurmas = table === 'turmas';\r\n  const isAlunos = table === 'alunos';\r\n\r\n  // Define colunas dinamicamente com base na tabela\r\n  const columns = data.length > 0\r\n    ? Object.keys(data[0]).filter((key) => key !== 'id' && key !== 'status')\r\n    : [];\r\n\r\n  // Adiciona a coluna \"ações\" para todas as tabelas\r\n  if (data.length > 0) {\r\n    columns.push('ações');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col}>{col.toUpperCase()}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length > 0 ? (\r\n            data.map((row, index) => (\r\n              <tr key={index}>\r\n                {columns.map((col) =>\r\n                  col === 'ações' ? (\r\n                    <td key={col}>\r\n                      {/* Ícone para alterar */}\r\n                      <FaEdit\r\n                        style={{ cursor: 'pointer', marginRight: '10px', color: 'blue' }}\r\n                        onClick={() => onEdit(row.id)}\r\n                      />\r\n                      {/* Ícone para excluir */}\r\n                      <FaTrashAlt\r\n                        style={{ cursor: 'pointer', marginRight: '10px', color: 'red' }}\r\n                        onClick={() => onDelete(row.id)}\r\n                      />\r\n                      {/* Ícone para ver dados relacionados */}\r\n                      {(isTurmas || isAlunos) && (\r\n                        <FaUsers\r\n                          style={{ cursor: 'pointer', color: 'green' }}\r\n                          onClick={() =>\r\n                            onViewRelated(\r\n                              isTurmas ? 'alunos' : 'turmas',\r\n                              row.id,\r\n                              isTurmas ? `Alunos da turma ${row.turma}` : `Turmas do aluno ${row.nome}`\r\n                            )\r\n                          }\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  ) : (\r\n                    <td key={col}>{row[col]}</td>\r\n                  )\r\n                )}\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={columns.length}>Nenhum dado encontrado.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\FormModal.js",[],"C:\\CODIGOS\\projetofinalpraticaengsoft\\projetofinalpraticaengsoft\\frontend\\src\\components\\ReactivationModal.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":13,"column":6,"nodeType":"37","endLine":13,"endColumn":25,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [table, searchTerm, fetchData]",{"range":"44","text":"45"},[409,428],"[table, searchTerm, fetchData]"]