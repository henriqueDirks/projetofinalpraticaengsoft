{"ast":null,"code":"var _jsxFileName = \"C:\\\\CODIGOS\\\\projetofinalpraticaengsoft\\\\projetofinalpraticaengsoft\\\\frontend\\\\src\\\\components\\\\RelationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RelationModal = ({\n  relatedId,\n  relationType,\n  onClose\n}) => {\n  _s();\n  const [relatedData, setRelatedData] = useState([]);\n  const [availableData, setAvailableData] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const isTurmaView = relationType === 'turmas';\n  useEffect(() => {\n    fetchRelatedData();\n    fetchAvailableData();\n  }, [relatedId]);\n  const fetchRelatedData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/${relationType}/relations?relatedId=${relatedId}`);\n      const data = await response.json();\n      setRelatedData(data);\n    } catch (err) {\n      console.error('Erro ao carregar relacionamentos:', err.message);\n    }\n  };\n  const fetchAvailableData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/${relationType}/available?relatedId=${relatedId}`);\n      const data = await response.json();\n      setAvailableData(data);\n    } catch (err) {\n      console.error('Erro ao carregar dados disponíveis:', err.message);\n    }\n  };\n  const handleAddRelation = async () => {\n    if (!selectedId) return;\n    try {\n      await fetch(`http://localhost:5000/api/relations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          alunos_id: isTurmaView ? selectedId : relatedId,\n          turmas_id: isTurmaView ? relatedId : selectedId\n        })\n      });\n      fetchRelatedData();\n      fetchAvailableData();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const handleDeleteRelation = async id => {\n    try {\n      await fetch(`http://localhost:5000/api/relations`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          alunos_id: isTurmaView ? id : relatedId,\n          turmas_id: isTurmaView ? relatedId : id\n        })\n      });\n      fetchRelatedData();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isTurmaView ? 'Alunos da Turma' : 'Turmas do Aluno'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Fechar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Relacionados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: relatedData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.nome, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRelation(item.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Adicionar Relacionamento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), availableData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.nome\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRelation,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(RelationModal, \"NB7vCQl7niL8w5aDgaHYTBSAKys=\");\n_c = RelationModal;\nexport default RelationModal;\nvar _c;\n$RefreshReg$(_c, \"RelationModal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RelationModal","relatedId","relationType","onClose","_s","relatedData","setRelatedData","availableData","setAvailableData","selectedId","setSelectedId","isTurmaView","fetchRelatedData","fetchAvailableData","response","fetch","data","json","err","console","error","message","handleAddRelation","method","headers","body","JSON","stringify","alunos_id","turmas_id","handleDeleteRelation","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","nome","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/CODIGOS/projetofinalpraticaengsoft/projetofinalpraticaengsoft/frontend/src/components/RelationModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst RelationModal = ({ relatedId, relationType, onClose }) => {\r\n  const [relatedData, setRelatedData] = useState([]);\r\n  const [availableData, setAvailableData] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const isTurmaView = relationType === 'turmas';\r\n\r\n  useEffect(() => {\r\n    fetchRelatedData();\r\n    fetchAvailableData();\r\n  }, [relatedId]);\r\n\r\n  const fetchRelatedData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/${relationType}/relations?relatedId=${relatedId}`);\r\n      const data = await response.json();\r\n      setRelatedData(data);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar relacionamentos:', err.message);\r\n    }\r\n  };\r\n\r\n  const fetchAvailableData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/${relationType}/available?relatedId=${relatedId}`);\r\n      const data = await response.json();\r\n      setAvailableData(data);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar dados disponíveis:', err.message);\r\n    }\r\n  };\r\n\r\n  const handleAddRelation = async () => {\r\n    if (!selectedId) return;\r\n    try {\r\n      await fetch(`http://localhost:5000/api/relations`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          alunos_id: isTurmaView ? selectedId : relatedId,\r\n          turmas_id: isTurmaView ? relatedId : selectedId,\r\n        }),\r\n      });\r\n      fetchRelatedData();\r\n      fetchAvailableData();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRelation = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/relations`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          alunos_id: isTurmaView ? id : relatedId,\r\n          turmas_id: isTurmaView ? relatedId : id,\r\n        }),\r\n      });\r\n      fetchRelatedData();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>{isTurmaView ? 'Alunos da Turma' : 'Turmas do Aluno'}</h2>\r\n        <button onClick={onClose}>Fechar</button>\r\n\r\n        <h3>Relacionados:</h3>\r\n        <ul>\r\n          {relatedData.map((item) => (\r\n            <li key={item.id}>\r\n              {item.nome}{' '}\r\n              <button onClick={() => handleDeleteRelation(item.id)}>Excluir</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h3>Adicionar Relacionamento:</h3>\r\n        <select onChange={(e) => setSelectedId(e.target.value)}>\r\n          <option value=\"\">Selecione</option>\r\n          {availableData.map((item) => (\r\n            <option key={item.id} value={item.id}>\r\n              {item.nome}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleAddRelation}>Adicionar</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelationModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}